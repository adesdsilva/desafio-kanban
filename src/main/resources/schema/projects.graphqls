# --- Types ---

type Project {
    id: ID!
    name: String!
    status: String
    plannedStart: String
    plannedEnd: String
    actualStart: String
    actualEnd: String
    daysDelay: Int
    percentTimeRemaining: Float
    responsibles: [Responsible!]
}

type Responsible {
    id: ID!
    name: String!
}

# --- Input / DTOs ---

input ProjectRequestDTO {
    name: String!
    plannedStart: String
    plannedEnd: String
    responsibleIds: [ID!]
}

type ProjectResponseDTO {
    id: ID!
    name: String!
    status: String
    plannedStart: String
    plannedEnd: String
    actualStart: String
    actualEnd: String
    daysDelay: Int
    percentTimeRemaining: Float
    responsibles: [Responsible!]
}

# --- Page Type ---

type ProjectPage {
    content: [ProjectResponseDTO!]!
    totalElements: Int!
    totalPages: Int!
    pageNumber: Int!
    pageSize: Int!
}

# --- Queries & Mutations ---

extend type Query {
    projects(page: Int, size: Int): ProjectPage!
    project(id: ID!): ProjectResponseDTO
}

extend type Mutation {
    createProject(request: ProjectRequestDTO!): ProjectResponseDTO
    updateProject(id: ID!, request: ProjectRequestDTO!): ProjectResponseDTO
    deleteProject(id: ID!): Boolean
    transitionProject(id: ID!, target: String!): ProjectResponseDTO
}
